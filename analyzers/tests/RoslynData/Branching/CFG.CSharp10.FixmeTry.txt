// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22FixmeTry%22%20%7B%0D%0Asubgraph%20%22cluster_1%22%20%7B%0Alabel%20%3D%20%22TryAndFinally%20region%22%0D%0Asubgraph%20%22cluster_2%22%20%7B%0Alabel%20%3D%20%22Try%20region%22%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%232%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20field%20%3D%201%3B%7C1%23%20SimpleAssignmentOperation%20%2F%20AssignmentExpressionSyntax%3A%20field%20%3D%201%7C2%23%20FieldReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20field%7C3%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20field%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%201%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_3%22%20%7B%0Alabel%20%3D%20%22Finally%20region%22%0D%0Acfg0_block3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%233%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20field%20%3D%2042%3B%7C1%23%20SimpleAssignmentOperation%20%2F%20AssignmentExpressionSyntax%3A%20field%20%3D%2042%7C2%23%20FieldReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20field%7C3%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20field%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%2042%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0A%7D%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20Fixme(false)%3B%7C1%23%20InvocationOperation%3A%20Fixme%20%2F%20InvocationExpressionSyntax%3A%20Fixme(false)%7C2%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20Fixme%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%20false%7C3%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20false%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block4%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%234%7D%22%5D%0D%0Acfg0_block1%20-%3E%20cfg0_block2%0D%0Acfg0_block3%20-%3E%20NoDestination_cfg0_block3%20%5Blabel%3D%22StructuredExceptionHandling%22%5D%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block2%20-%3E%20cfg0_block4%0D%0A%7D%0D%0A

/*
public void FixmeTry()
    {
        Fixme(false);
        try
        {
            field = 1;
        }
        finally
        {
            field = 42;
        }
    }
*/

digraph "FixmeTry" {
subgraph "cluster_1" {
label = "TryAndFinally region"
subgraph "cluster_2" {
label = "Try region"
cfg0_block2 [shape=record label="{BLOCK #2|0# ExpressionStatementOperation / ExpressionStatementSyntax: field = 1;|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: field = 1|2# FieldReferenceOperation / IdentifierNameSyntax: field|3# InstanceReferenceOperation / IdentifierNameSyntax: field|2# LiteralOperation / LiteralExpressionSyntax: 1|##########}"]
}
subgraph "cluster_3" {
label = "Finally region"
cfg0_block3 [shape=record label="{BLOCK #3|0# ExpressionStatementOperation / ExpressionStatementSyntax: field = 42;|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: field = 42|2# FieldReferenceOperation / IdentifierNameSyntax: field|3# InstanceReferenceOperation / IdentifierNameSyntax: field|2# LiteralOperation / LiteralExpressionSyntax: 42|##########}"]
}
}
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block1 [shape=record label="{BLOCK #1|0# ExpressionStatementOperation / ExpressionStatementSyntax: Fixme(false);|1# InvocationOperation: Fixme / InvocationExpressionSyntax: Fixme(false)|2# InstanceReferenceOperation / IdentifierNameSyntax: Fixme|2# ArgumentOperation / ArgumentSyntax: false|3# LiteralOperation / LiteralExpressionSyntax: false|##########}"]
cfg0_block4 [shape=record label="{EXIT #4}"]
cfg0_block1 -> cfg0_block2
cfg0_block3 -> NoDestination_cfg0_block3 [label="StructuredExceptionHandling"]
cfg0_block0 -> cfg0_block1
cfg0_block2 -> cfg0_block4
}
