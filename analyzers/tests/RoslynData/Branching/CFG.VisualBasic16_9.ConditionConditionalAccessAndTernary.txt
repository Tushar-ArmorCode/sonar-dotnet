// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22ConditionConditionalAccessAndTernary%22%20%7B%0D%0Asubgraph%20%22cluster_1%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Locals%3A%20ConditionConditionalAccessAndTernary%22%0D%0Asubgraph%20%22cluster_2%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Captures%3A%20%23Capture-0%22%0D%0Asubgraph%20%22cluster_3%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Captures%3A%20%23Capture-1%22%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C0%23%3A%20FlowCaptureOperation%3A%20%23Capture-1%3A%20A%7C1%23%3A%200%23.Value%3A%20ParameterReferenceOperation%3A%20A%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C0%23%3A%20IsNullOperation%3A%20A%7C1%23%3A%200%23.Operand%3A%20FlowCaptureReferenceOperation%3A%20%23Capture-1%3A%20A%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%232%7C0%23%3A%20FlowCaptureOperation%3A%20%23Capture-0%3A%20.ToString%7C1%23%3A%200%23.Value%3A%20InvocationOperation%3A%20ToString%3A%20.ToString%7C2%23%3A%201%23.Instance%3A%20FlowCaptureReferenceOperation%3A%20%23Capture-1%3A%20A%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%233%7C0%23%3A%20FlowCaptureOperation%3A%20%23Capture-0%3A%20A%7C1%23%3A%200%23.Value%3A%20DefaultValueOperation%3A%20A%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%234%7C%23%23%20BranchValue%20%23%23%7C0%23%3A%20InvocationOperation%3A%20IsNullOrEmpty%3A%20String.IsNullOrEmpty(A%3F.ToString)%7C1%23%3A%20ArgumentOperation%3A%20A%3F.ToString%7C2%23%3A%201%23.Value%3A%20FlowCaptureReferenceOperation%3A%20%23Capture-0%3A%20A%3F.ToString%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_4%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Captures%3A%20%23Capture-2%22%0D%0Acfg0_block5%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%235%7C%23%23%20BranchValue%20%23%23%7C0%23%3A%20ParameterReferenceOperation%3A%20Condition%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block6%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%236%7C0%23%3A%20FlowCaptureOperation%3A%20%23Capture-2%3A%20A%7C1%23%3A%200%23.Value%3A%20ParameterReferenceOperation%3A%20A%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block7%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%237%7C0%23%3A%20FlowCaptureOperation%3A%20%23Capture-2%3A%20B%7C1%23%3A%200%23.Value%3A%20ParameterReferenceOperation%3A%20B%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block8%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%238%7C%23%23%20BranchValue%20%23%23%7C0%23%3A%20FlowCaptureReferenceOperation%3A%20%23Capture-2%3A%20If(Condition%2C%20A%2C%20B)%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block9%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%239%7C%23%23%20BranchValue%20%23%23%7C0%23%3A%20LiteralOperation%3A%20%5C%22Lorem%20Ipsum%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block10%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%2310%7D%22%5D%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block1%20-%3E%20cfg0_block2%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block1%20-%3E%20cfg0_block3%20%5Blabel%3D%22WhenTrue%22%5D%0D%0Acfg0_block2%20-%3E%20cfg0_block4%0D%0Acfg0_block3%20-%3E%20cfg0_block4%0D%0Acfg0_block4%20-%3E%20cfg0_block5%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block5%20-%3E%20cfg0_block6%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block5%20-%3E%20cfg0_block7%20%5Blabel%3D%22WhenFalse%22%5D%0D%0Acfg0_block6%20-%3E%20cfg0_block8%0D%0Acfg0_block7%20-%3E%20cfg0_block8%0D%0Acfg0_block4%20-%3E%20cfg0_block9%20%5Blabel%3D%22WhenFalse%22%5D%0D%0Acfg0_block8%20-%3E%20cfg0_block10%20%5Blabel%3D%22Return%22%5D%0D%0Acfg0_block9%20-%3E%20cfg0_block10%20%5Blabel%3D%22Return%22%5D%0D%0A%7D%0D%0A

/*
Public Function ConditionConditionalAccessAndTernary(Condition As Boolean, A As String, B As String) As String
        If String.IsNullOrEmpty(A?.ToString) Then
            Return If(Condition, A, B)
        Else
            Return "Lorem Ipsum"
        End If
    End Function
*/

digraph "ConditionConditionalAccessAndTernary" {
subgraph "cluster_1" {
label = "LocalLifetime region, Locals: ConditionConditionalAccessAndTernary"
subgraph "cluster_2" {
label = "LocalLifetime region, Captures: #Capture-0"
subgraph "cluster_3" {
label = "LocalLifetime region, Captures: #Capture-1"
cfg0_block1 [shape=record label="{BLOCK #1|0#: FlowCaptureOperation: #Capture-1: A|1#: 0#.Value: ParameterReferenceOperation: A|##########|## BranchValue ##|0#: IsNullOperation: A|1#: 0#.Operand: FlowCaptureReferenceOperation: #Capture-1: A|##########}"]
cfg0_block2 [shape=record label="{BLOCK #2|0#: FlowCaptureOperation: #Capture-0: .ToString|1#: 0#.Value: InvocationOperation: ToString: .ToString|2#: 1#.Instance: FlowCaptureReferenceOperation: #Capture-1: A|##########}"]
}
cfg0_block3 [shape=record label="{BLOCK #3|0#: FlowCaptureOperation: #Capture-0: A|1#: 0#.Value: DefaultValueOperation: A|##########}"]
cfg0_block4 [shape=record label="{BLOCK #4|## BranchValue ##|0#: InvocationOperation: IsNullOrEmpty: String.IsNullOrEmpty(A?.ToString)|1#: ArgumentOperation: A?.ToString|2#: 1#.Value: FlowCaptureReferenceOperation: #Capture-0: A?.ToString|##########}"]
}
subgraph "cluster_4" {
label = "LocalLifetime region, Captures: #Capture-2"
cfg0_block5 [shape=record label="{BLOCK #5|## BranchValue ##|0#: ParameterReferenceOperation: Condition|##########}"]
cfg0_block6 [shape=record label="{BLOCK #6|0#: FlowCaptureOperation: #Capture-2: A|1#: 0#.Value: ParameterReferenceOperation: A|##########}"]
cfg0_block7 [shape=record label="{BLOCK #7|0#: FlowCaptureOperation: #Capture-2: B|1#: 0#.Value: ParameterReferenceOperation: B|##########}"]
cfg0_block8 [shape=record label="{BLOCK #8|## BranchValue ##|0#: FlowCaptureReferenceOperation: #Capture-2: If(Condition, A, B)|##########}"]
}
cfg0_block9 [shape=record label="{BLOCK #9|## BranchValue ##|0#: LiteralOperation: \"Lorem Ipsum\"|##########}"]
}
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block10 [shape=record label="{EXIT #10}"]
cfg0_block0 -> cfg0_block1
cfg0_block1 -> cfg0_block2 [label="Else"]
cfg0_block1 -> cfg0_block3 [label="WhenTrue"]
cfg0_block2 -> cfg0_block4
cfg0_block3 -> cfg0_block4
cfg0_block4 -> cfg0_block5 [label="Else"]
cfg0_block5 -> cfg0_block6 [label="Else"]
cfg0_block5 -> cfg0_block7 [label="WhenFalse"]
cfg0_block6 -> cfg0_block8
cfg0_block7 -> cfg0_block8
cfg0_block4 -> cfg0_block9 [label="WhenFalse"]
cfg0_block8 -> cfg0_block10 [label="Return"]
cfg0_block9 -> cfg0_block10 [label="Return"]
}
