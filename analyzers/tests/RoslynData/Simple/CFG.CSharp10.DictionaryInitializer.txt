// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22DictionaryInitializer%22%20%7B%0D%0Asubgraph%20%22cluster_1%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Locals%3A%20dict%22%0D%0Asubgraph%20%22cluster_2%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Captures%3A%20%230%22%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C0%23%20FlowCaptureOperation%3A%20%230%20%2F%20ObjectCreationExpressionSyntax%3A%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7C1%23%20ObjectCreationOperation%20%2F%20ObjectCreationExpressionSyntax%3A%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7C0%23%20InvocationOperation%3A%20Add%20%2F%20InitializerExpressionSyntax%3A%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%7C1%23%20FlowCaptureReferenceOperation%3A%20%230%20%2F%20ObjectCreationExpressionSyntax%3A%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7C1%23%20ArgumentOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22a%5C%22%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22a%5C%22%7C1%23%20ArgumentOperation%20%2F%20LiteralExpressionSyntax%3A%201%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%201%7C%23%23%23%23%23%23%23%23%23%23%7C0%23%20InvocationOperation%3A%20Add%20%2F%20InitializerExpressionSyntax%3A%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%7C1%23%20FlowCaptureReferenceOperation%3A%20%230%20%2F%20ObjectCreationExpressionSyntax%3A%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7C1%23%20ArgumentOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22b%5C%22%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22b%5C%22%7C1%23%20ArgumentOperation%20%2F%20LiteralExpressionSyntax%3A%202%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%202%7C%23%23%23%23%23%23%23%23%23%23%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20dict%20%3D%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20dict%20%3D%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7C1%23%20FlowCaptureReferenceOperation%3A%20%230%20%2F%20ObjectCreationExpressionSyntax%3A%20new%20Dictionary%5C%3Cstring%2C%20int%5C%3E()%20%5C%7B%20%5C%7B%20%5C%22a%5C%22%2C%201%20%5C%7D%2C%20%5C%7B%20%5C%22b%5C%22%2C%202%20%5C%7D%20%5C%7D%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%232%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20dict%5B%5C%22a%5C%22%5D%20%3D%2042%3B%7C1%23%20SimpleAssignmentOperation%20%2F%20AssignmentExpressionSyntax%3A%20dict%5B%5C%22a%5C%22%5D%20%3D%2042%7C2%23%20PropertyReferenceOperation%20%2F%20ElementAccessExpressionSyntax%3A%20dict%5B%5C%22a%5C%22%5D%7C3%23%20LocalReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20dict%7C3%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%20%5C%22a%5C%22%7C4%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22a%5C%22%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%2042%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block3%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%233%7D%22%5D%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block1%20-%3E%20cfg0_block2%0D%0Acfg0_block2%20-%3E%20cfg0_block3%0D%0A%7D%0D%0A

/*
public void DictionaryInitializer()
    {
        var dict = new Dictionary<string, int>() { { "a", 1 }, { "b", 2 } };
        dict["a"] = 42;
    }
*/

digraph "DictionaryInitializer" {
subgraph "cluster_1" {
label = "LocalLifetime region, Locals: dict"
subgraph "cluster_2" {
label = "LocalLifetime region, Captures: #0"
cfg0_block1 [shape=record label="{BLOCK #1|0# FlowCaptureOperation: #0 / ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|1# ObjectCreationOperation / ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|##########|0# InvocationOperation: Add / InitializerExpressionSyntax: \{ \"a\", 1 \}|1# FlowCaptureReferenceOperation: #0 / ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|1# ArgumentOperation / LiteralExpressionSyntax: \"a\"|2# LiteralOperation / LiteralExpressionSyntax: \"a\"|1# ArgumentOperation / LiteralExpressionSyntax: 1|2# LiteralOperation / LiteralExpressionSyntax: 1|##########|0# InvocationOperation: Add / InitializerExpressionSyntax: \{ \"b\", 2 \}|1# FlowCaptureReferenceOperation: #0 / ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|1# ArgumentOperation / LiteralExpressionSyntax: \"b\"|2# LiteralOperation / LiteralExpressionSyntax: \"b\"|1# ArgumentOperation / LiteralExpressionSyntax: 2|2# LiteralOperation / LiteralExpressionSyntax: 2|##########|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: dict = new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|1# LocalReferenceOperation / VariableDeclaratorSyntax: dict = new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|1# FlowCaptureReferenceOperation: #0 / ObjectCreationExpressionSyntax: new Dictionary\<string, int\>() \{ \{ \"a\", 1 \}, \{ \"b\", 2 \} \}|##########}"]
}
cfg0_block2 [shape=record label="{BLOCK #2|0# ExpressionStatementOperation / ExpressionStatementSyntax: dict[\"a\"] = 42;|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: dict[\"a\"] = 42|2# PropertyReferenceOperation / ElementAccessExpressionSyntax: dict[\"a\"]|3# LocalReferenceOperation / IdentifierNameSyntax: dict|3# ArgumentOperation / ArgumentSyntax: \"a\"|4# LiteralOperation / LiteralExpressionSyntax: \"a\"|2# LiteralOperation / LiteralExpressionSyntax: 42|##########}"]
}
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block3 [shape=record label="{EXIT #3}"]
cfg0_block0 -> cfg0_block1
cfg0_block1 -> cfg0_block2
cfg0_block2 -> cfg0_block3
}
