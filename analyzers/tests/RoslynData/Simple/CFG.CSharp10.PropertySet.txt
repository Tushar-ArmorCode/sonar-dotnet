// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22PropertySet%22%20%7B%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20b.Property%20%3D%20%5C%22Value%5C%22%3B%7C1%23%20SimpleAssignmentOperation%20%2F%20AssignmentExpressionSyntax%3A%20b.Property%20%3D%20%5C%22Value%5C%22%7C2%23%20PropertyReferenceOperation%20%2F%20MemberAccessExpressionSyntax%3A%20b.Property%7C3%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20b%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22Value%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%232%7D%22%5D%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block1%20-%3E%20cfg0_block2%0D%0A%7D%0D%0A

/*
public void PropertySet(EmptyBase b)
    {
        b.Property = "Value";
    }
*/

digraph "PropertySet" {
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block1 [shape=record label="{BLOCK #1|0# ExpressionStatementOperation / ExpressionStatementSyntax: b.Property = \"Value\";|1# SimpleAssignmentOperation / AssignmentExpressionSyntax: b.Property = \"Value\"|2# PropertyReferenceOperation / MemberAccessExpressionSyntax: b.Property|3# ParameterReferenceOperation / IdentifierNameSyntax: b|2# LiteralOperation / LiteralExpressionSyntax: \"Value\"|##########}"]
cfg0_block2 [shape=record label="{EXIT #2}"]
cfg0_block0 -> cfg0_block1
cfg0_block1 -> cfg0_block2
}
