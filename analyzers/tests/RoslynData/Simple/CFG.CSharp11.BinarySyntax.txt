// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22BinarySyntax%22%20%7B%0D%0Asubgraph%20%22cluster_1%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Locals%3A%20value%22%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C0%23%3A%20SimpleAssignmentOperation%3A%20value%20%3D%20%5C%22Lorem%5C%22%20%2B%20%5C%22Ipsum%5C%22%20%2B%20%5C%22Dolor%5C%22%20%2B%20%5C%22Samet%5C%22%7C1%23%3A%200%23.Target%3A%20LocalReferenceOperation%3A%20value%20%3D%20%5C%22Lorem%5C%22%20%2B%20%5C%22Ipsum%5C%22%20%2B%20%5C%22Dolor%5C%22%20%2B%20%5C%22Samet%5C%22%7C1%23%3A%200%23.Value%3A%20BinaryOperation%3A%20%5C%22Lorem%5C%22%20%2B%20%5C%22Ipsum%5C%22%20%2B%20%5C%22Dolor%5C%22%20%2B%20%5C%22Samet%5C%22%7C2%23%3A%201%23.LeftOperand%3A%20BinaryOperation%3A%20%5C%22Lorem%5C%22%20%2B%20%5C%22Ipsum%5C%22%20%2B%20%5C%22Dolor%5C%22%7C3%23%3A%202%23.LeftOperand%3A%20BinaryOperation%3A%20%5C%22Lorem%5C%22%20%2B%20%5C%22Ipsum%5C%22%7C4%23%3A%203%23.LeftOperand%3A%20LiteralOperation%3A%20%5C%22Lorem%5C%22%7C4%23%3A%203%23.RightOperand%3A%20LiteralOperation%3A%20%5C%22Ipsum%5C%22%7C3%23%3A%202%23.RightOperand%3A%20LiteralOperation%3A%20%5C%22Dolor%5C%22%7C2%23%3A%201%23.RightOperand%3A%20LiteralOperation%3A%20%5C%22Samet%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7C0%23%3A%20ExpressionStatementOperation%3A%20Console.WriteLine(value)%3B%7C1%23%3A%200%23.Operation%3A%20InvocationOperation%3A%20WriteLine%3A%20Console.WriteLine(value)%7C2%23%3A%20ArgumentOperation%3A%20value%7C3%23%3A%202%23.Value%3A%20LocalReferenceOperation%3A%20value%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%232%7D%22%5D%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block1%20-%3E%20cfg0_block2%0D%0A%7D%0D%0A

/*
public void BinarySyntax()
    {
        var value = "Lorem" + "Ipsum" + "Dolor" + "Samet";
        Console.WriteLine(value);
    }
*/

digraph "BinarySyntax" {
subgraph "cluster_1" {
label = "LocalLifetime region, Locals: value"
cfg0_block1 [shape=record label="{BLOCK #1|0#: SimpleAssignmentOperation: value = \"Lorem\" + \"Ipsum\" + \"Dolor\" + \"Samet\"|1#: 0#.Target: LocalReferenceOperation: value = \"Lorem\" + \"Ipsum\" + \"Dolor\" + \"Samet\"|1#: 0#.Value: BinaryOperation: \"Lorem\" + \"Ipsum\" + \"Dolor\" + \"Samet\"|2#: 1#.LeftOperand: BinaryOperation: \"Lorem\" + \"Ipsum\" + \"Dolor\"|3#: 2#.LeftOperand: BinaryOperation: \"Lorem\" + \"Ipsum\"|4#: 3#.LeftOperand: LiteralOperation: \"Lorem\"|4#: 3#.RightOperand: LiteralOperation: \"Ipsum\"|3#: 2#.RightOperand: LiteralOperation: \"Dolor\"|2#: 1#.RightOperand: LiteralOperation: \"Samet\"|##########|0#: ExpressionStatementOperation: Console.WriteLine(value);|1#: 0#.Operation: InvocationOperation: WriteLine: Console.WriteLine(value)|2#: ArgumentOperation: value|3#: 2#.Value: LocalReferenceOperation: value|##########}"]
}
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block2 [shape=record label="{EXIT #2}"]
cfg0_block0 -> cfg0_block1
cfg0_block1 -> cfg0_block2
}
