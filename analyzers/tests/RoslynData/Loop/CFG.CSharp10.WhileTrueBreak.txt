// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22WhileTrueBreak%22%20%7B%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%232%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20beforeBreak%20%3D%20%5C%22BeforeBreak%5C%22%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20beforeBreak%20%3D%20%5C%22BeforeBreak%5C%22%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22BeforeBreak%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%233%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20afterBreak%20%3D%20%5C%22AfterBreak%5C%22%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20afterBreak%20%3D%20%5C%22AfterBreak%5C%22%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22AfterBreak%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C%23%23%20BranchValue%20%23%23%7C0%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20true%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block4%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%234%7D%22%5D%0D%0Acfg0_block1%20-%3E%20cfg0_block2%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block3%20-%3E%20cfg0_block1%0D%0Acfg0_block1%20-%3E%20cfg0_block4%20%5Blabel%3D%22WhenFalse%22%5D%0D%0Acfg0_block2%20-%3E%20cfg0_block4%0D%0A%7D%0D%0A

/*
public void WhileTrueBreak()
    {
        while (true)
        {
            var beforeBreak = "BeforeBreak";
            break;
            var afterBreak = "AfterBreak";
        }
    }
*/

digraph "WhileTrueBreak" {
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
cfg0_block2 [shape=record label="{BLOCK #2|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: beforeBreak = \"BeforeBreak\"|1# LocalReferenceOperation / VariableDeclaratorSyntax: beforeBreak = \"BeforeBreak\"|1# LiteralOperation / LiteralExpressionSyntax: \"BeforeBreak\"|##########}"]
cfg0_block3 [shape=record label="{BLOCK #3|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: afterBreak = \"AfterBreak\"|1# LocalReferenceOperation / VariableDeclaratorSyntax: afterBreak = \"AfterBreak\"|1# LiteralOperation / LiteralExpressionSyntax: \"AfterBreak\"|##########}"]
}
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block1 [shape=record label="{BLOCK #1|## BranchValue ##|0# LiteralOperation / LiteralExpressionSyntax: true|##########}"]
cfg0_block4 [shape=record label="{EXIT #4}"]
cfg0_block1 -> cfg0_block2 [label="Else"]
cfg0_block0 -> cfg0_block1
cfg0_block3 -> cfg0_block1
cfg0_block1 -> cfg0_block4 [label="WhenFalse"]
cfg0_block2 -> cfg0_block4
}
