// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22DoContinue%22%20%7B%0D%0Asubgraph%20%22cluster_1%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Locals%3A%20i%22%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20i%20%3D%200%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20i%20%3D%200%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%200%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%232%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20i%2B%2B%3B%7C1%23%20IncrementOrDecrementOperation%20%2F%20PostfixUnaryExpressionSyntax%3A%20i%2B%2B%7C2%23%20LocalReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20i%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C0%23%20BinaryOperation%20%2F%20BinaryExpressionSyntax%3A%20i%20%5C%3C%205%7C1%23%20LocalReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20i%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%205%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%233%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20i%20%2B%3D%2010%3B%7C1%23%20CompoundAssignmentOperation%20%2F%20AssignmentExpressionSyntax%3A%20i%20%2B%3D%2010%7C2%23%20LocalReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20i%7C2%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%2010%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%234%7C%23%23%20BranchValue%20%23%23%7C0%23%20BinaryOperation%20%2F%20BinaryExpressionSyntax%3A%20i%20%5C%3C%2010%7C1%23%20LocalReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20i%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%2010%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block5%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%235%7D%22%5D%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block1%20-%3E%20cfg0_block2%0D%0Acfg0_block4%20-%3E%20cfg0_block2%20%5Blabel%3D%22WhenTrue%22%5D%0D%0Acfg0_block2%20-%3E%20cfg0_block3%20%5Blabel%3D%22WhenFalse%22%5D%0D%0Acfg0_block2%20-%3E%20cfg0_block4%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block3%20-%3E%20cfg0_block4%0D%0Acfg0_block4%20-%3E%20cfg0_block5%20%5Blabel%3D%22Else%22%5D%0D%0A%7D%0D%0A

/*
public void DoContinue()
    {
        var i = 0;
        do
        {
            i++;
            if (i < 5)
            {
                continue;
            }
            i += 10;
        } while (i < 10);
    }
*/

digraph "DoContinue" {
subgraph "cluster_1" {
label = "LocalLifetime region, Locals: i"
cfg0_block1 [shape=record label="{BLOCK #1|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: i = 0|1# LocalReferenceOperation / VariableDeclaratorSyntax: i = 0|1# LiteralOperation / LiteralExpressionSyntax: 0|##########}"]
cfg0_block2 [shape=record label="{BLOCK #2|0# ExpressionStatementOperation / ExpressionStatementSyntax: i++;|1# IncrementOrDecrementOperation / PostfixUnaryExpressionSyntax: i++|2# LocalReferenceOperation / IdentifierNameSyntax: i|##########|## BranchValue ##|0# BinaryOperation / BinaryExpressionSyntax: i \< 5|1# LocalReferenceOperation / IdentifierNameSyntax: i|1# LiteralOperation / LiteralExpressionSyntax: 5|##########}"]
cfg0_block3 [shape=record label="{BLOCK #3|0# ExpressionStatementOperation / ExpressionStatementSyntax: i += 10;|1# CompoundAssignmentOperation / AssignmentExpressionSyntax: i += 10|2# LocalReferenceOperation / IdentifierNameSyntax: i|2# LiteralOperation / LiteralExpressionSyntax: 10|##########}"]
cfg0_block4 [shape=record label="{BLOCK #4|## BranchValue ##|0# BinaryOperation / BinaryExpressionSyntax: i \< 10|1# LocalReferenceOperation / IdentifierNameSyntax: i|1# LiteralOperation / LiteralExpressionSyntax: 10|##########}"]
}
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block5 [shape=record label="{EXIT #5}"]
cfg0_block0 -> cfg0_block1
cfg0_block1 -> cfg0_block2
cfg0_block4 -> cfg0_block2 [label="WhenTrue"]
cfg0_block2 -> cfg0_block3 [label="WhenFalse"]
cfg0_block2 -> cfg0_block4 [label="Else"]
cfg0_block3 -> cfg0_block4
cfg0_block4 -> cfg0_block5 [label="Else"]
}
