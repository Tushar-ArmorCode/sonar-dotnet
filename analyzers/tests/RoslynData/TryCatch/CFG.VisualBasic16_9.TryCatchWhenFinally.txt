// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22TryCatchWhenFinally%22%20%7B%0D%0Asubgraph%20%22cluster_1%22%20%7B%0Alabel%20%3D%20%22TryAndFinally%20region%22%0D%0Asubgraph%20%22cluster_2%22%20%7B%0Alabel%20%3D%20%22Try%20region%22%0D%0Asubgraph%20%22cluster_3%22%20%7B%0Alabel%20%3D%20%22TryAndCatch%20region%22%0D%0Asubgraph%20%22cluster_4%22%20%7B%0Alabel%20%3D%20%22Try%20region%22%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C0%23%3A%20ExpressionStatementOperation%3A%20A()%7C1%23%3A%200%23.Operation%3A%20InvocationOperation%3A%20A%3A%20A()%7C2%23%3A%201%23.Instance%3A%20InstanceReferenceOperation%3A%20A%7C%23%23%23%23%23%23%23%23%23%23%7C0%23%3A%20ExpressionStatementOperation%3A%20B()%7C1%23%3A%200%23.Operation%3A%20InvocationOperation%3A%20B%3A%20B()%7C2%23%3A%201%23.Instance%3A%20InstanceReferenceOperation%3A%20B%7C%23%23%23%23%23%23%23%23%23%23%7C0%23%3A%20ExpressionStatementOperation%3A%20C()%7C1%23%3A%200%23.Operation%3A%20InvocationOperation%3A%20C%3A%20C()%7C2%23%3A%201%23.Instance%3A%20InstanceReferenceOperation%3A%20C%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_5%22%20%7B%0Alabel%20%3D%20%22FilterAndHandler%20region%3A%20System.Exception%2C%20Locals%3A%20Ex%22%0D%0Asubgraph%20%22cluster_6%22%20%7B%0Alabel%20%3D%20%22Filter%20region%3A%20System.Exception%22%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%232%7C0%23%3A%20SimpleAssignmentOperation%3A%20Ex%7C1%23%3A%200%23.Target%3A%20LocalReferenceOperation%3A%20Ex%7C1%23%3A%200%23.Value%3A%20CaughtExceptionOperation%3A%20Ex%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C0%23%3A%20InvocationOperation%3A%20Contains%3A%20Ex.Message.Contains(%5C%22memory%5C%22)%7C1%23%3A%200%23.Instance%3A%20PropertyReferenceOperation%3A%20Ex.Message%7C2%23%3A%201%23.Instance%3A%20LocalReferenceOperation%3A%20Ex%7C1%23%3A%20ArgumentOperation%3A%20%5C%22memory%5C%22%7C2%23%3A%201%23.Value%3A%20LiteralOperation%3A%20%5C%22memory%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_7%22%20%7B%0Alabel%20%3D%20%22Catch%20region%3A%20System.Exception%22%0D%0Acfg0_block3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%233%7C0%23%3A%20ExpressionStatementOperation%3A%20Handle(Ex)%7C1%23%3A%200%23.Operation%3A%20InvocationOperation%3A%20Handle%3A%20Handle(Ex)%7C2%23%3A%201%23.Instance%3A%20InstanceReferenceOperation%3A%20Handle%7C2%23%3A%20ArgumentOperation%3A%20Ex%7C3%23%3A%202%23.Value%3A%20LocalReferenceOperation%3A%20Ex%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0A%7D%0D%0A%7D%0D%0A%7D%0D%0Asubgraph%20%22cluster_8%22%20%7B%0Alabel%20%3D%20%22Finally%20region%22%0D%0Acfg0_block4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%234%7C0%23%3A%20ExpressionStatementOperation%3A%20F()%7C1%23%3A%200%23.Operation%3A%20InvocationOperation%3A%20F%3A%20F()%7C2%23%3A%201%23.Instance%3A%20InstanceReferenceOperation%3A%20F%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0A%7D%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block5%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%235%7D%22%5D%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block2%20-%3E%20NoDestination_cfg0_block2%20%5Blabel%3D%22StructuredExceptionHandling%22%5D%0D%0Acfg0_block2%20-%3E%20cfg0_block3%20%5Blabel%3D%22WhenTrue%22%5D%0D%0Acfg0_block4%20-%3E%20NoDestination_cfg0_block4%20%5Blabel%3D%22StructuredExceptionHandling%22%5D%0D%0Acfg0_block1%20-%3E%20cfg0_block5%0D%0Acfg0_block3%20-%3E%20cfg0_block5%0D%0A%7D%0D%0A

/*
Public Sub TryCatchWhenFinally()
        Try
            A()
            B()
            C()
        Catch Ex As Exception When Ex.Message.Contains("memory")
            Handle(Ex)
        Finally
            F()
        End Try
    End Sub
*/

digraph "TryCatchWhenFinally" {
subgraph "cluster_1" {
label = "TryAndFinally region"
subgraph "cluster_2" {
label = "Try region"
subgraph "cluster_3" {
label = "TryAndCatch region"
subgraph "cluster_4" {
label = "Try region"
cfg0_block1 [shape=record label="{BLOCK #1|0#: ExpressionStatementOperation: A()|1#: 0#.Operation: InvocationOperation: A: A()|2#: 1#.Instance: InstanceReferenceOperation: A|##########|0#: ExpressionStatementOperation: B()|1#: 0#.Operation: InvocationOperation: B: B()|2#: 1#.Instance: InstanceReferenceOperation: B|##########|0#: ExpressionStatementOperation: C()|1#: 0#.Operation: InvocationOperation: C: C()|2#: 1#.Instance: InstanceReferenceOperation: C|##########}"]
}
subgraph "cluster_5" {
label = "FilterAndHandler region: System.Exception, Locals: Ex"
subgraph "cluster_6" {
label = "Filter region: System.Exception"
cfg0_block2 [shape=record label="{BLOCK #2|0#: SimpleAssignmentOperation: Ex|1#: 0#.Target: LocalReferenceOperation: Ex|1#: 0#.Value: CaughtExceptionOperation: Ex|##########|## BranchValue ##|0#: InvocationOperation: Contains: Ex.Message.Contains(\"memory\")|1#: 0#.Instance: PropertyReferenceOperation: Ex.Message|2#: 1#.Instance: LocalReferenceOperation: Ex|1#: ArgumentOperation: \"memory\"|2#: 1#.Value: LiteralOperation: \"memory\"|##########}"]
}
subgraph "cluster_7" {
label = "Catch region: System.Exception"
cfg0_block3 [shape=record label="{BLOCK #3|0#: ExpressionStatementOperation: Handle(Ex)|1#: 0#.Operation: InvocationOperation: Handle: Handle(Ex)|2#: 1#.Instance: InstanceReferenceOperation: Handle|2#: ArgumentOperation: Ex|3#: 2#.Value: LocalReferenceOperation: Ex|##########}"]
}
}
}
}
subgraph "cluster_8" {
label = "Finally region"
cfg0_block4 [shape=record label="{BLOCK #4|0#: ExpressionStatementOperation: F()|1#: 0#.Operation: InvocationOperation: F: F()|2#: 1#.Instance: InstanceReferenceOperation: F|##########}"]
}
}
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block5 [shape=record label="{EXIT #5}"]
cfg0_block0 -> cfg0_block1
cfg0_block2 -> NoDestination_cfg0_block2 [label="StructuredExceptionHandling"]
cfg0_block2 -> cfg0_block3 [label="WhenTrue"]
cfg0_block4 -> NoDestination_cfg0_block4 [label="StructuredExceptionHandling"]
cfg0_block1 -> cfg0_block5
cfg0_block3 -> cfg0_block5
}
