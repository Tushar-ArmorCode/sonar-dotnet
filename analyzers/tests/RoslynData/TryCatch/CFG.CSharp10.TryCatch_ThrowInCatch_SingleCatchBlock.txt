// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22TryCatch_ThrowInCatch_SingleCatchBlock%22%20%7B%0D%0Asubgraph%20%22cluster_1%22%20%7B%0Alabel%20%3D%20%22TryAndCatch%20region%22%0D%0Asubgraph%20%22cluster_2%22%20%7B%0Alabel%20%3D%20%22Try%20region%22%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%232%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20Tag(%5C%22InTry%5C%22)%3B%7C1%23%20InvocationOperation%3A%20Tag%20%2F%20InvocationExpressionSyntax%3A%20Tag(%5C%22InTry%5C%22)%7C2%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20Tag%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%20%5C%22InTry%5C%22%7C3%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22InTry%5C%22%7C2%23%20ArgumentOperation%20%2F%20InvocationExpressionSyntax%3A%20Tag(%5C%22InTry%5C%22)%7C3%23%20DefaultValueOperation%20%2F%20InvocationExpressionSyntax%3A%20Tag(%5C%22InTry%5C%22)%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_3%22%20%7B%0Alabel%20%3D%20%22Catch%20region%3A%20object%22%0D%0Acfg0_block3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%233%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20Tag(%5C%22InCatch%5C%22)%3B%7C1%23%20InvocationOperation%3A%20Tag%20%2F%20InvocationExpressionSyntax%3A%20Tag(%5C%22InCatch%5C%22)%7C2%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20Tag%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%20%5C%22InCatch%5C%22%7C3%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22InCatch%5C%22%7C2%23%20ArgumentOperation%20%2F%20InvocationExpressionSyntax%3A%20Tag(%5C%22InCatch%5C%22)%7C3%23%20DefaultValueOperation%20%2F%20InvocationExpressionSyntax%3A%20Tag(%5C%22InCatch%5C%22)%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C0%23%20ObjectCreationOperation%20%2F%20ObjectCreationExpressionSyntax%3A%20new%20System.Exception()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%234%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20Tag(%5C%22UnreachableInCatch%5C%22)%3B%7C1%23%20InvocationOperation%3A%20Tag%20%2F%20InvocationExpressionSyntax%3A%20Tag(%5C%22UnreachableInCatch%5C%22)%7C2%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20Tag%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%20%5C%22UnreachableInCatch%5C%22%7C3%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22UnreachableInCatch%5C%22%7C2%23%20ArgumentOperation%20%2F%20InvocationExpressionSyntax%3A%20Tag(%5C%22UnreachableInCatch%5C%22)%7C3%23%20DefaultValueOperation%20%2F%20InvocationExpressionSyntax%3A%20Tag(%5C%22UnreachableInCatch%5C%22)%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0A%7D%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20Tag(%5C%22BeforeTry%5C%22)%3B%7C1%23%20InvocationOperation%3A%20Tag%20%2F%20InvocationExpressionSyntax%3A%20Tag(%5C%22BeforeTry%5C%22)%7C2%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20Tag%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%20%5C%22BeforeTry%5C%22%7C3%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22BeforeTry%5C%22%7C2%23%20ArgumentOperation%20%2F%20InvocationExpressionSyntax%3A%20Tag(%5C%22BeforeTry%5C%22)%7C3%23%20DefaultValueOperation%20%2F%20InvocationExpressionSyntax%3A%20Tag(%5C%22BeforeTry%5C%22)%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block5%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%235%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20Tag(%5C%22UnreachableAfterCatch%5C%22)%3B%7C1%23%20InvocationOperation%3A%20Tag%20%2F%20InvocationExpressionSyntax%3A%20Tag(%5C%22UnreachableAfterCatch%5C%22)%7C2%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20Tag%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%20%5C%22UnreachableAfterCatch%5C%22%7C3%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22UnreachableAfterCatch%5C%22%7C2%23%20ArgumentOperation%20%2F%20InvocationExpressionSyntax%3A%20Tag(%5C%22UnreachableAfterCatch%5C%22)%7C3%23%20DefaultValueOperation%20%2F%20InvocationExpressionSyntax%3A%20Tag(%5C%22UnreachableAfterCatch%5C%22)%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block6%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%236%7D%22%5D%0D%0Acfg0_block1%20-%3E%20cfg0_block2%0D%0Acfg0_block3%20-%3E%20NoDestination_cfg0_block3%20%5Blabel%3D%22Throw%22%5D%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block2%20-%3E%20cfg0_block5%0D%0Acfg0_block4%20-%3E%20cfg0_block5%0D%0Acfg0_block5%20-%3E%20cfg0_block6%0D%0A%7D%0D%0A

/*
public void TryCatch_ThrowInCatch_SingleCatchBlock()
    {
        Tag("BeforeTry");
        try
        {
            Tag("InTry");
        }
        catch
        {
            Tag("InCatch");
            throw new System.Exception();
            Tag("UnreachableInCatch");
        }
        Tag("UnreachableAfterCatch");
    }
*/

digraph "TryCatch_ThrowInCatch_SingleCatchBlock" {
subgraph "cluster_1" {
label = "TryAndCatch region"
subgraph "cluster_2" {
label = "Try region"
cfg0_block2 [shape=record label="{BLOCK #2|0# ExpressionStatementOperation / ExpressionStatementSyntax: Tag(\"InTry\");|1# InvocationOperation: Tag / InvocationExpressionSyntax: Tag(\"InTry\")|2# InstanceReferenceOperation / IdentifierNameSyntax: Tag|2# ArgumentOperation / ArgumentSyntax: \"InTry\"|3# LiteralOperation / LiteralExpressionSyntax: \"InTry\"|2# ArgumentOperation / InvocationExpressionSyntax: Tag(\"InTry\")|3# DefaultValueOperation / InvocationExpressionSyntax: Tag(\"InTry\")|##########}"]
}
subgraph "cluster_3" {
label = "Catch region: object"
cfg0_block3 [shape=record label="{BLOCK #3|0# ExpressionStatementOperation / ExpressionStatementSyntax: Tag(\"InCatch\");|1# InvocationOperation: Tag / InvocationExpressionSyntax: Tag(\"InCatch\")|2# InstanceReferenceOperation / IdentifierNameSyntax: Tag|2# ArgumentOperation / ArgumentSyntax: \"InCatch\"|3# LiteralOperation / LiteralExpressionSyntax: \"InCatch\"|2# ArgumentOperation / InvocationExpressionSyntax: Tag(\"InCatch\")|3# DefaultValueOperation / InvocationExpressionSyntax: Tag(\"InCatch\")|##########|## BranchValue ##|0# ObjectCreationOperation / ObjectCreationExpressionSyntax: new System.Exception()|##########}"]
cfg0_block4 [shape=record label="{BLOCK #4|0# ExpressionStatementOperation / ExpressionStatementSyntax: Tag(\"UnreachableInCatch\");|1# InvocationOperation: Tag / InvocationExpressionSyntax: Tag(\"UnreachableInCatch\")|2# InstanceReferenceOperation / IdentifierNameSyntax: Tag|2# ArgumentOperation / ArgumentSyntax: \"UnreachableInCatch\"|3# LiteralOperation / LiteralExpressionSyntax: \"UnreachableInCatch\"|2# ArgumentOperation / InvocationExpressionSyntax: Tag(\"UnreachableInCatch\")|3# DefaultValueOperation / InvocationExpressionSyntax: Tag(\"UnreachableInCatch\")|##########}"]
}
}
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block1 [shape=record label="{BLOCK #1|0# ExpressionStatementOperation / ExpressionStatementSyntax: Tag(\"BeforeTry\");|1# InvocationOperation: Tag / InvocationExpressionSyntax: Tag(\"BeforeTry\")|2# InstanceReferenceOperation / IdentifierNameSyntax: Tag|2# ArgumentOperation / ArgumentSyntax: \"BeforeTry\"|3# LiteralOperation / LiteralExpressionSyntax: \"BeforeTry\"|2# ArgumentOperation / InvocationExpressionSyntax: Tag(\"BeforeTry\")|3# DefaultValueOperation / InvocationExpressionSyntax: Tag(\"BeforeTry\")|##########}"]
cfg0_block5 [shape=record label="{BLOCK #5|0# ExpressionStatementOperation / ExpressionStatementSyntax: Tag(\"UnreachableAfterCatch\");|1# InvocationOperation: Tag / InvocationExpressionSyntax: Tag(\"UnreachableAfterCatch\")|2# InstanceReferenceOperation / IdentifierNameSyntax: Tag|2# ArgumentOperation / ArgumentSyntax: \"UnreachableAfterCatch\"|3# LiteralOperation / LiteralExpressionSyntax: \"UnreachableAfterCatch\"|2# ArgumentOperation / InvocationExpressionSyntax: Tag(\"UnreachableAfterCatch\")|3# DefaultValueOperation / InvocationExpressionSyntax: Tag(\"UnreachableAfterCatch\")|##########}"]
cfg0_block6 [shape=record label="{EXIT #6}"]
cfg0_block1 -> cfg0_block2
cfg0_block3 -> NoDestination_cfg0_block3 [label="Throw"]
cfg0_block0 -> cfg0_block1
cfg0_block2 -> cfg0_block5
cfg0_block4 -> cfg0_block5
cfg0_block5 -> cfg0_block6
}
