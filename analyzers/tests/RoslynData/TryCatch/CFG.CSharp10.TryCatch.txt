// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22TryCatch%22%20%7B%0D%0Asubgraph%20%22cluster_TryAndCatch%20region%22%20%7B%0Alabel%20%3D%20%22TryAndCatch%20region%22%0D%0Asubgraph%20%22cluster_Try%20region%22%20%7B%0Alabel%20%3D%20%22Try%20region%22%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20A()%3B%7C1%23%20InvocationOperation%3A%20A%20%2F%20InvocationExpressionSyntax%3A%20A()%7C2%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20A%7C%23%23%23%23%23%23%23%23%23%23%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20B()%3B%7C1%23%20InvocationOperation%3A%20B%20%2F%20InvocationExpressionSyntax%3A%20B()%7C2%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20B%7C%23%23%23%23%23%23%23%23%23%23%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20C()%3B%7C1%23%20InvocationOperation%3A%20C%20%2F%20InvocationExpressionSyntax%3A%20C()%7C2%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20C%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Asubgraph%20%22cluster_Catch%20region%20System.Exception%22%20%7B%0Alabel%20%3D%20%22Catch%20region%20System.Exception%22%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%232%7C0%23%20SimpleAssignmentOperation%20%2F%20CatchDeclarationSyntax%3A%20(Exception%20ex)%7C1%23%20LocalReferenceOperation%20%2F%20CatchDeclarationSyntax%3A%20(Exception%20ex)%7C1%23%20CaughtExceptionOperation%20%2F%20CatchDeclarationSyntax%3A%20(Exception%20ex)%7C%23%23%23%23%23%23%23%23%23%23%7C0%23%20ExpressionStatementOperation%20%2F%20ExpressionStatementSyntax%3A%20Handle(ex)%3B%7C1%23%20InvocationOperation%3A%20Handle%20%2F%20InvocationExpressionSyntax%3A%20Handle(ex)%7C2%23%20InstanceReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20Handle%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%20ex%7C3%23%20LocalReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20ex%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0A%7D%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block3%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%233%7D%22%5D%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block1%20-%3E%20cfg0_block3%0D%0Acfg0_block2%20-%3E%20cfg0_block3%0D%0A%7D%0D%0A

/*
public void TryCatch()
    {
        try
        {
            A();
            B();
            C();
        }
        catch (Exception ex)
        {
            Handle(ex);
        }
    }
*/

digraph "TryCatch" {
subgraph "cluster_TryAndCatch region" {
label = "TryAndCatch region"
subgraph "cluster_Try region" {
label = "Try region"
cfg0_block1 [shape=record label="{BLOCK #1|0# ExpressionStatementOperation / ExpressionStatementSyntax: A();|1# InvocationOperation: A / InvocationExpressionSyntax: A()|2# InstanceReferenceOperation / IdentifierNameSyntax: A|##########|0# ExpressionStatementOperation / ExpressionStatementSyntax: B();|1# InvocationOperation: B / InvocationExpressionSyntax: B()|2# InstanceReferenceOperation / IdentifierNameSyntax: B|##########|0# ExpressionStatementOperation / ExpressionStatementSyntax: C();|1# InvocationOperation: C / InvocationExpressionSyntax: C()|2# InstanceReferenceOperation / IdentifierNameSyntax: C|##########}"]
}
subgraph "cluster_Catch region System.Exception" {
label = "Catch region System.Exception"
cfg0_block2 [shape=record label="{BLOCK #2|0# SimpleAssignmentOperation / CatchDeclarationSyntax: (Exception ex)|1# LocalReferenceOperation / CatchDeclarationSyntax: (Exception ex)|1# CaughtExceptionOperation / CatchDeclarationSyntax: (Exception ex)|##########|0# ExpressionStatementOperation / ExpressionStatementSyntax: Handle(ex);|1# InvocationOperation: Handle / InvocationExpressionSyntax: Handle(ex)|2# InstanceReferenceOperation / IdentifierNameSyntax: Handle|2# ArgumentOperation / ArgumentSyntax: ex|3# LocalReferenceOperation / IdentifierNameSyntax: ex|##########}"]
}
}
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block3 [shape=record label="{EXIT #3}"]
cfg0_block0 -> cfg0_block1
cfg0_block1 -> cfg0_block3
cfg0_block2 -> cfg0_block3
}
