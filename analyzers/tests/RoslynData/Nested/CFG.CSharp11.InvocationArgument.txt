// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22InvocationArgument%22%20%7B%0D%0Asubgraph%20%22cluster_1%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Captures%3A%20%23Capture-0%22%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C%23%23%20BranchValue%20%23%23%7C0%23%3A%20ParameterReferenceOperation%3A%20condition%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%232%7C0%23%3A%20FlowCaptureOperation%3A%20%23Capture-0%3A%20a.ToString()%7C1%23%3A%200%23.Value%3A%20InvocationOperation%3A%20ToString%3A%20a.ToString()%7C2%23%3A%201%23.Instance%3A%20ParameterReferenceOperation%3A%20a%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%233%7C0%23%3A%20FlowCaptureOperation%3A%20%23Capture-0%3A%20%5C%22Default%5C%22%7C1%23%3A%200%23.Value%3A%20LiteralOperation%3A%20%5C%22Default%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%234%7C0%23%3A%20ExpressionStatementOperation%3A%20Console.WriteLine(condition%20%3F%20a.ToString()%20%3A%20%5C%22Default%5C%22)%3B%7C1%23%3A%200%23.Operation%3A%20InvocationOperation%3A%20WriteLine%3A%20Console.WriteLine(condition%20%3F%20a.ToString()%20%3A%20%5C%22Default%5C%22)%7C2%23%3A%20ArgumentOperation%3A%20condition%20%3F%20a.ToString()%20%3A%20%5C%22Default%5C%22%7C3%23%3A%202%23.Value%3A%20FlowCaptureReferenceOperation%3A%20%23Capture-0%3A%20condition%20%3F%20a.ToString()%20%3A%20%5C%22Default%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block5%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%235%7D%22%5D%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block1%20-%3E%20cfg0_block2%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block1%20-%3E%20cfg0_block3%20%5Blabel%3D%22WhenFalse%22%5D%0D%0Acfg0_block2%20-%3E%20cfg0_block4%0D%0Acfg0_block3%20-%3E%20cfg0_block4%0D%0Acfg0_block4%20-%3E%20cfg0_block5%0D%0A%7D%0D%0A

/*
public void InvocationArgument(bool condition, object a)
    {
        Console.WriteLine(condition ? a.ToString() : "Default");
    }
*/

digraph "InvocationArgument" {
subgraph "cluster_1" {
label = "LocalLifetime region, Captures: #Capture-0"
cfg0_block1 [shape=record label="{BLOCK #1|## BranchValue ##|0#: ParameterReferenceOperation: condition|##########}"]
cfg0_block2 [shape=record label="{BLOCK #2|0#: FlowCaptureOperation: #Capture-0: a.ToString()|1#: 0#.Value: InvocationOperation: ToString: a.ToString()|2#: 1#.Instance: ParameterReferenceOperation: a|##########}"]
cfg0_block3 [shape=record label="{BLOCK #3|0#: FlowCaptureOperation: #Capture-0: \"Default\"|1#: 0#.Value: LiteralOperation: \"Default\"|##########}"]
cfg0_block4 [shape=record label="{BLOCK #4|0#: ExpressionStatementOperation: Console.WriteLine(condition ? a.ToString() : \"Default\");|1#: 0#.Operation: InvocationOperation: WriteLine: Console.WriteLine(condition ? a.ToString() : \"Default\")|2#: ArgumentOperation: condition ? a.ToString() : \"Default\"|3#: 2#.Value: FlowCaptureReferenceOperation: #Capture-0: condition ? a.ToString() : \"Default\"|##########}"]
}
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block5 [shape=record label="{EXIT #5}"]
cfg0_block0 -> cfg0_block1
cfg0_block1 -> cfg0_block2 [label="Else"]
cfg0_block1 -> cfg0_block3 [label="WhenFalse"]
cfg0_block2 -> cfg0_block4
cfg0_block3 -> cfg0_block4
cfg0_block4 -> cfg0_block5
}
