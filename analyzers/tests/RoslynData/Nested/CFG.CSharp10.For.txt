// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22For%22%20%7B%0D%0Asubgraph%20%22cluster_1%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Locals%3A%20i%22%0D%0Asubgraph%20%22cluster_2%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Locals%3A%20j%22%0D%0Asubgraph%20%22cluster_3%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Locals%3A%20x%22%0D%0Acfg0_block5%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%235%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20x%20%3D%20i%20%2B%20j%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20x%20%3D%20i%20%2B%20j%7C1%23%20BinaryOperation%20%2F%20BinaryExpressionSyntax%3A%20i%20%2B%20j%7C2%23%20LocalReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20i%7C2%23%20LocalReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20j%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%233%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20j%20%3D%200%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20j%20%3D%200%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%200%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%234%7C%23%23%20BranchValue%20%23%23%7C0%23%20BinaryOperation%20%2F%20BinaryExpressionSyntax%3A%20j%20%5C%3C%20b%7C1%23%20LocalReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20j%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20b%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block6%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%236%7C0%23%20ExpressionStatementOperation%20%2F%20PostfixUnaryExpressionSyntax%3A%20i%2B%2B%7C1%23%20IncrementOrDecrementOperation%20%2F%20PostfixUnaryExpressionSyntax%3A%20i%2B%2B%7C2%23%20LocalReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20i%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20i%20%3D%200%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20i%20%3D%200%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%200%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%232%7C%23%23%20BranchValue%20%23%23%7C0%23%20BinaryOperation%20%2F%20BinaryExpressionSyntax%3A%20i%20%5C%3C%20a%7C1%23%20LocalReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20i%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20a%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block7%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%237%7C0%23%20ExpressionStatementOperation%20%2F%20PostfixUnaryExpressionSyntax%3A%20i%2B%2B%7C1%23%20IncrementOrDecrementOperation%20%2F%20PostfixUnaryExpressionSyntax%3A%20i%2B%2B%7C2%23%20LocalReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20i%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block8%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%238%7D%22%5D%0D%0Acfg0_block4%20-%3E%20cfg0_block5%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block2%20-%3E%20cfg0_block3%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block3%20-%3E%20cfg0_block4%0D%0Acfg0_block6%20-%3E%20cfg0_block4%0D%0Acfg0_block5%20-%3E%20cfg0_block6%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block1%20-%3E%20cfg0_block2%0D%0Acfg0_block7%20-%3E%20cfg0_block2%0D%0Acfg0_block4%20-%3E%20cfg0_block7%20%5Blabel%3D%22WhenFalse%22%5D%0D%0Acfg0_block2%20-%3E%20cfg0_block8%20%5Blabel%3D%22WhenFalse%22%5D%0D%0A%7D%0D%0A

/*
public void For(int a, int b)
    {
        for (int i = 0; i < a; i++)
        {
            for (int j = 0; j < b; i++)
            {
                var x = i + j;
            }
        }
    }
*/

digraph "For" {
subgraph "cluster_1" {
label = "LocalLifetime region, Locals: i"
subgraph "cluster_2" {
label = "LocalLifetime region, Locals: j"
subgraph "cluster_3" {
label = "LocalLifetime region, Locals: x"
cfg0_block5 [shape=record label="{BLOCK #5|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: x = i + j|1# LocalReferenceOperation / VariableDeclaratorSyntax: x = i + j|1# BinaryOperation / BinaryExpressionSyntax: i + j|2# LocalReferenceOperation / IdentifierNameSyntax: i|2# LocalReferenceOperation / IdentifierNameSyntax: j|##########}"]
}
cfg0_block3 [shape=record label="{BLOCK #3|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: j = 0|1# LocalReferenceOperation / VariableDeclaratorSyntax: j = 0|1# LiteralOperation / LiteralExpressionSyntax: 0|##########}"]
cfg0_block4 [shape=record label="{BLOCK #4|## BranchValue ##|0# BinaryOperation / BinaryExpressionSyntax: j \< b|1# LocalReferenceOperation / IdentifierNameSyntax: j|1# ParameterReferenceOperation / IdentifierNameSyntax: b|##########}"]
cfg0_block6 [shape=record label="{BLOCK #6|0# ExpressionStatementOperation / PostfixUnaryExpressionSyntax: i++|1# IncrementOrDecrementOperation / PostfixUnaryExpressionSyntax: i++|2# LocalReferenceOperation / IdentifierNameSyntax: i|##########}"]
}
cfg0_block1 [shape=record label="{BLOCK #1|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: i = 0|1# LocalReferenceOperation / VariableDeclaratorSyntax: i = 0|1# LiteralOperation / LiteralExpressionSyntax: 0|##########}"]
cfg0_block2 [shape=record label="{BLOCK #2|## BranchValue ##|0# BinaryOperation / BinaryExpressionSyntax: i \< a|1# LocalReferenceOperation / IdentifierNameSyntax: i|1# ParameterReferenceOperation / IdentifierNameSyntax: a|##########}"]
cfg0_block7 [shape=record label="{BLOCK #7|0# ExpressionStatementOperation / PostfixUnaryExpressionSyntax: i++|1# IncrementOrDecrementOperation / PostfixUnaryExpressionSyntax: i++|2# LocalReferenceOperation / IdentifierNameSyntax: i|##########}"]
}
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block8 [shape=record label="{EXIT #8}"]
cfg0_block4 -> cfg0_block5 [label="Else"]
cfg0_block2 -> cfg0_block3 [label="Else"]
cfg0_block3 -> cfg0_block4
cfg0_block6 -> cfg0_block4
cfg0_block5 -> cfg0_block6
cfg0_block0 -> cfg0_block1
cfg0_block1 -> cfg0_block2
cfg0_block7 -> cfg0_block2
cfg0_block4 -> cfg0_block7 [label="WhenFalse"]
cfg0_block2 -> cfg0_block8 [label="WhenFalse"]
}
