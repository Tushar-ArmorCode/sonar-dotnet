// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22ConditionalAccessCoalesce%22%20%7B%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0Asubgraph%20%22cluster_LocalLifetime%20region%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%22%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C0%23%20FlowCaptureOperation%3A%20%231%20%2F%20IdentifierNameSyntax%3A%20o%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20o%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C0%23%20IsNullOperation%20%2F%20IdentifierNameSyntax%3A%20o%7C1%23%20FlowCaptureReferenceOperation%3A%20%231%20%2F%20IdentifierNameSyntax%3A%20o%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%232%7C0%23%20FlowCaptureOperation%3A%20%230%20%2F%20InvocationExpressionSyntax%3A%20.ToString()%7C1%23%20InvocationOperation%3A%20ToString%20%2F%20InvocationExpressionSyntax%3A%20.ToString()%7C2%23%20FlowCaptureReferenceOperation%3A%20%231%20%2F%20IdentifierNameSyntax%3A%20o%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%233%7C0%23%20FlowCaptureOperation%3A%20%230%20%2F%20IdentifierNameSyntax%3A%20o%7C1%23%20DefaultValueOperation%20%2F%20IdentifierNameSyntax%3A%20o%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%234%7C%23%23%20BranchValue%20%23%23%7C0%23%20IsNullOperation%20%2F%20ConditionalAccessExpressionSyntax%3A%20o%3F.ToString()%7C1%23%20FlowCaptureReferenceOperation%3A%20%230%20%2F%20ConditionalAccessExpressionSyntax%3A%20o%3F.ToString()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block5%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%235%7C0%23%20FlowCaptureOperation%3A%20%232%20%2F%20ConditionalAccessExpressionSyntax%3A%20o%3F.ToString()%7C1%23%20FlowCaptureReferenceOperation%3A%20%230%20%2F%20ConditionalAccessExpressionSyntax%3A%20o%3F.ToString()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block6%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%236%7C0%23%20FlowCaptureOperation%3A%20%232%20%2F%20LiteralExpressionSyntax%3A%20%5C%22N%2FA%5C%22%7C1%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%20%5C%22N%2FA%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block7%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%237%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20ret%20%3D%20o%3F.ToString()%20%3F%3F%20%5C%22N%2FA%5C%22%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20ret%20%3D%20o%3F.ToString()%20%3F%3F%20%5C%22N%2FA%5C%22%7C1%23%20FlowCaptureReferenceOperation%3A%20%232%20%2F%20BinaryExpressionSyntax%3A%20o%3F.ToString()%20%3F%3F%20%5C%22N%2FA%5C%22%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block8%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%238%7D%22%5D%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block1%20-%3E%20cfg0_block2%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block1%20-%3E%20cfg0_block3%20%5Blabel%3D%22WhenTrue%22%5D%0D%0Acfg0_block2%20-%3E%20cfg0_block4%0D%0Acfg0_block3%20-%3E%20cfg0_block4%0D%0Acfg0_block4%20-%3E%20cfg0_block5%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block4%20-%3E%20cfg0_block6%20%5Blabel%3D%22WhenTrue%22%5D%0D%0Acfg0_block5%20-%3E%20cfg0_block7%0D%0Acfg0_block6%20-%3E%20cfg0_block7%0D%0Acfg0_block7%20-%3E%20cfg0_block8%0D%0A%7D%0D%0A

/*
public void ConditionalAccessCoalesce(object o)
    {
        var ret = o?.ToString() ?? "N/A";
    }
*/

digraph "ConditionalAccessCoalesce" {
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
subgraph "cluster_LocalLifetime region" {
label = "LocalLifetime region"
cfg0_block1 [shape=record label="{BLOCK #1|0# FlowCaptureOperation: #1 / IdentifierNameSyntax: o|1# ParameterReferenceOperation / IdentifierNameSyntax: o|##########|## BranchValue ##|0# IsNullOperation / IdentifierNameSyntax: o|1# FlowCaptureReferenceOperation: #1 / IdentifierNameSyntax: o|##########}"]
cfg0_block2 [shape=record label="{BLOCK #2|0# FlowCaptureOperation: #0 / InvocationExpressionSyntax: .ToString()|1# InvocationOperation: ToString / InvocationExpressionSyntax: .ToString()|2# FlowCaptureReferenceOperation: #1 / IdentifierNameSyntax: o|##########}"]
}
cfg0_block3 [shape=record label="{BLOCK #3|0# FlowCaptureOperation: #0 / IdentifierNameSyntax: o|1# DefaultValueOperation / IdentifierNameSyntax: o|##########}"]
cfg0_block4 [shape=record label="{BLOCK #4|## BranchValue ##|0# IsNullOperation / ConditionalAccessExpressionSyntax: o?.ToString()|1# FlowCaptureReferenceOperation: #0 / ConditionalAccessExpressionSyntax: o?.ToString()|##########}"]
cfg0_block5 [shape=record label="{BLOCK #5|0# FlowCaptureOperation: #2 / ConditionalAccessExpressionSyntax: o?.ToString()|1# FlowCaptureReferenceOperation: #0 / ConditionalAccessExpressionSyntax: o?.ToString()|##########}"]
}
cfg0_block6 [shape=record label="{BLOCK #6|0# FlowCaptureOperation: #2 / LiteralExpressionSyntax: \"N/A\"|1# LiteralOperation / LiteralExpressionSyntax: \"N/A\"|##########}"]
cfg0_block7 [shape=record label="{BLOCK #7|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: ret = o?.ToString() ?? \"N/A\"|1# LocalReferenceOperation / VariableDeclaratorSyntax: ret = o?.ToString() ?? \"N/A\"|1# FlowCaptureReferenceOperation: #2 / BinaryExpressionSyntax: o?.ToString() ?? \"N/A\"|##########}"]
}
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block8 [shape=record label="{EXIT #8}"]
cfg0_block0 -> cfg0_block1
cfg0_block1 -> cfg0_block2 [label="Else"]
cfg0_block1 -> cfg0_block3 [label="WhenTrue"]
cfg0_block2 -> cfg0_block4
cfg0_block3 -> cfg0_block4
cfg0_block4 -> cfg0_block5 [label="Else"]
cfg0_block4 -> cfg0_block6 [label="WhenTrue"]
cfg0_block5 -> cfg0_block7
cfg0_block6 -> cfg0_block7
cfg0_block7 -> cfg0_block8
}
