// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22ConditionalAccessChained%22%20%7B%0D%0Asubgraph%20%22cluster_1%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Locals%3A%20ret%2C%20Captures%3A%20%230%22%0D%0Asubgraph%20%22cluster_2%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Captures%3A%20%233%22%0D%0Asubgraph%20%22cluster_3%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Captures%3A%20%232%22%0D%0Asubgraph%20%22cluster_4%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Captures%3A%20%231%22%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C0%23%20FlowCaptureOperation%3A%20%231%20%2F%20IdentifierNameSyntax%3A%20o%7C1%23%20ParameterReferenceOperation%20%2F%20IdentifierNameSyntax%3A%20o%7C%23%23%23%23%23%23%23%23%23%23%7C%23%23%20BranchValue%20%23%23%7C0%23%20IsNullOperation%20%2F%20IdentifierNameSyntax%3A%20o%7C1%23%20FlowCaptureReferenceOperation%3A%20%231%20%2F%20IdentifierNameSyntax%3A%20o%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%232%7C0%23%20FlowCaptureOperation%3A%20%232%20%2F%20InvocationExpressionSyntax%3A%20.ToString()%7C1%23%20InvocationOperation%3A%20ToString%20%2F%20InvocationExpressionSyntax%3A%20.ToString()%7C2%23%20FlowCaptureReferenceOperation%3A%20%231%20%2F%20IdentifierNameSyntax%3A%20o%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%233%7C%23%23%20BranchValue%20%23%23%7C0%23%20IsNullOperation%20%2F%20InvocationExpressionSyntax%3A%20.ToString()%7C1%23%20FlowCaptureReferenceOperation%3A%20%232%20%2F%20InvocationExpressionSyntax%3A%20.ToString()%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%234%7C0%23%20FlowCaptureOperation%3A%20%233%20%2F%20InvocationExpressionSyntax%3A%20.Substring(0%2C%201)%7C1%23%20InvocationOperation%3A%20Substring%20%2F%20InvocationExpressionSyntax%3A%20.Substring(0%2C%201)%7C2%23%20FlowCaptureReferenceOperation%3A%20%232%20%2F%20InvocationExpressionSyntax%3A%20.ToString()%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%200%7C3%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%200%7C2%23%20ArgumentOperation%20%2F%20ArgumentSyntax%3A%201%7C3%23%20LiteralOperation%20%2F%20LiteralExpressionSyntax%3A%201%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block5%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%235%7C%23%23%20BranchValue%20%23%23%7C0%23%20IsNullOperation%20%2F%20InvocationExpressionSyntax%3A%20.Substring(0%2C%201)%7C1%23%20FlowCaptureReferenceOperation%3A%20%233%20%2F%20InvocationExpressionSyntax%3A%20.Substring(0%2C%201)%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block6%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%236%7C0%23%20FlowCaptureOperation%3A%20%230%20%2F%20MemberBindingExpressionSyntax%3A%20.Length%7C1%23%20ConversionOperation%20%2F%20MemberBindingExpressionSyntax%3A%20.Length%7C2%23%20PropertyReferenceOperation%20%2F%20MemberBindingExpressionSyntax%3A%20.Length%7C3%23%20FlowCaptureReferenceOperation%3A%20%233%20%2F%20InvocationExpressionSyntax%3A%20.Substring(0%2C%201)%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block7%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%237%7C0%23%20FlowCaptureOperation%3A%20%230%20%2F%20ConditionalAccessExpressionSyntax%3A%20o%3F.ToString()%3F.Substring(0%2C%201)%3F.Length%7C1%23%20DefaultValueOperation%20%2F%20ConditionalAccessExpressionSyntax%3A%20o%3F.ToString()%3F.Substring(0%2C%201)%3F.Length%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block8%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%238%7C0%23%20SimpleAssignmentOperation%20%2F%20VariableDeclaratorSyntax%3A%20ret%20%3D%20o%3F.ToString()%3F.Substring(0%2C%201)%3F.Length%7C1%23%20LocalReferenceOperation%20%2F%20VariableDeclaratorSyntax%3A%20ret%20%3D%20o%3F.ToString()%3F.Substring(0%2C%201)%3F.Length%7C1%23%20FlowCaptureReferenceOperation%3A%20%230%20%2F%20ConditionalAccessExpressionSyntax%3A%20o%3F.ToString()%3F.Substring(0%2C%201)%3F.Length%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block9%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%239%7D%22%5D%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block1%20-%3E%20cfg0_block2%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block2%20-%3E%20cfg0_block3%0D%0Acfg0_block3%20-%3E%20cfg0_block4%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block4%20-%3E%20cfg0_block5%0D%0Acfg0_block5%20-%3E%20cfg0_block6%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block1%20-%3E%20cfg0_block7%20%5Blabel%3D%22WhenTrue%22%5D%0D%0Acfg0_block3%20-%3E%20cfg0_block7%20%5Blabel%3D%22WhenTrue%22%5D%0D%0Acfg0_block5%20-%3E%20cfg0_block7%20%5Blabel%3D%22WhenTrue%22%5D%0D%0Acfg0_block6%20-%3E%20cfg0_block8%0D%0Acfg0_block7%20-%3E%20cfg0_block8%0D%0Acfg0_block8%20-%3E%20cfg0_block9%0D%0A%7D%0D%0A

/*
public void ConditionalAccessChained(object o)
    {
        var ret = o?.ToString()?.Substring(0, 1)?.Length;
    }
*/

digraph "ConditionalAccessChained" {
subgraph "cluster_1" {
label = "LocalLifetime region, Locals: ret, Captures: #0"
subgraph "cluster_2" {
label = "LocalLifetime region, Captures: #3"
subgraph "cluster_3" {
label = "LocalLifetime region, Captures: #2"
subgraph "cluster_4" {
label = "LocalLifetime region, Captures: #1"
cfg0_block1 [shape=record label="{BLOCK #1|0# FlowCaptureOperation: #1 / IdentifierNameSyntax: o|1# ParameterReferenceOperation / IdentifierNameSyntax: o|##########|## BranchValue ##|0# IsNullOperation / IdentifierNameSyntax: o|1# FlowCaptureReferenceOperation: #1 / IdentifierNameSyntax: o|##########}"]
cfg0_block2 [shape=record label="{BLOCK #2|0# FlowCaptureOperation: #2 / InvocationExpressionSyntax: .ToString()|1# InvocationOperation: ToString / InvocationExpressionSyntax: .ToString()|2# FlowCaptureReferenceOperation: #1 / IdentifierNameSyntax: o|##########}"]
}
cfg0_block3 [shape=record label="{BLOCK #3|## BranchValue ##|0# IsNullOperation / InvocationExpressionSyntax: .ToString()|1# FlowCaptureReferenceOperation: #2 / InvocationExpressionSyntax: .ToString()|##########}"]
cfg0_block4 [shape=record label="{BLOCK #4|0# FlowCaptureOperation: #3 / InvocationExpressionSyntax: .Substring(0, 1)|1# InvocationOperation: Substring / InvocationExpressionSyntax: .Substring(0, 1)|2# FlowCaptureReferenceOperation: #2 / InvocationExpressionSyntax: .ToString()|2# ArgumentOperation / ArgumentSyntax: 0|3# LiteralOperation / LiteralExpressionSyntax: 0|2# ArgumentOperation / ArgumentSyntax: 1|3# LiteralOperation / LiteralExpressionSyntax: 1|##########}"]
}
cfg0_block5 [shape=record label="{BLOCK #5|## BranchValue ##|0# IsNullOperation / InvocationExpressionSyntax: .Substring(0, 1)|1# FlowCaptureReferenceOperation: #3 / InvocationExpressionSyntax: .Substring(0, 1)|##########}"]
cfg0_block6 [shape=record label="{BLOCK #6|0# FlowCaptureOperation: #0 / MemberBindingExpressionSyntax: .Length|1# ConversionOperation / MemberBindingExpressionSyntax: .Length|2# PropertyReferenceOperation / MemberBindingExpressionSyntax: .Length|3# FlowCaptureReferenceOperation: #3 / InvocationExpressionSyntax: .Substring(0, 1)|##########}"]
}
cfg0_block7 [shape=record label="{BLOCK #7|0# FlowCaptureOperation: #0 / ConditionalAccessExpressionSyntax: o?.ToString()?.Substring(0, 1)?.Length|1# DefaultValueOperation / ConditionalAccessExpressionSyntax: o?.ToString()?.Substring(0, 1)?.Length|##########}"]
cfg0_block8 [shape=record label="{BLOCK #8|0# SimpleAssignmentOperation / VariableDeclaratorSyntax: ret = o?.ToString()?.Substring(0, 1)?.Length|1# LocalReferenceOperation / VariableDeclaratorSyntax: ret = o?.ToString()?.Substring(0, 1)?.Length|1# FlowCaptureReferenceOperation: #0 / ConditionalAccessExpressionSyntax: o?.ToString()?.Substring(0, 1)?.Length|##########}"]
}
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block9 [shape=record label="{EXIT #9}"]
cfg0_block0 -> cfg0_block1
cfg0_block1 -> cfg0_block2 [label="Else"]
cfg0_block2 -> cfg0_block3
cfg0_block3 -> cfg0_block4 [label="Else"]
cfg0_block4 -> cfg0_block5
cfg0_block5 -> cfg0_block6 [label="Else"]
cfg0_block1 -> cfg0_block7 [label="WhenTrue"]
cfg0_block3 -> cfg0_block7 [label="WhenTrue"]
cfg0_block5 -> cfg0_block7 [label="WhenTrue"]
cfg0_block6 -> cfg0_block8
cfg0_block7 -> cfg0_block8
cfg0_block8 -> cfg0_block9
}
