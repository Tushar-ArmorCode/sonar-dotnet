// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22SwitchStatementIs%22%20%7B%0D%0Asubgraph%20%22cluster_1%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Captures%3A%20%23Capture-0%22%0D%0Asubgraph%20%22cluster_2%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Locals%3A%20a%2C%20b%2C%20c%22%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%232%7C%23%23%20BranchValue%20%23%23%7C0%23%3A%20IsPatternOperation%3A%20TypeA%20a%7C1%23%3A%200%23.Value%3A%20FlowCaptureReferenceOperation%3A%20%23Capture-0%3A%20arg%7C1%23%3A%200%23.Pattern%3A%20DeclarationPatternOperation%3A%20TypeA%20a%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%233%7C%23%23%20BranchValue%20%23%23%7C0%23%3A%20InvocationOperation%3A%20ToString%3A%20a.ToString()%7C1%23%3A%200%23.Instance%3A%20LocalReferenceOperation%3A%20a%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%234%7C%23%23%20BranchValue%20%23%23%7C0%23%3A%20IsPatternOperation%3A%20TypeB%20b%7C1%23%3A%200%23.Value%3A%20FlowCaptureReferenceOperation%3A%20%23Capture-0%3A%20arg%7C1%23%3A%200%23.Pattern%3A%20DeclarationPatternOperation%3A%20TypeB%20b%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block5%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%235%7C%23%23%20BranchValue%20%23%23%7C0%23%3A%20InvocationOperation%3A%20ToString%3A%20b.ToString()%7C1%23%3A%200%23.Instance%3A%20LocalReferenceOperation%3A%20b%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block6%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%236%7C%23%23%20BranchValue%20%23%23%7C0%23%3A%20IsPatternOperation%3A%20TypeC%20c%7C1%23%3A%200%23.Value%3A%20FlowCaptureReferenceOperation%3A%20%23Capture-0%3A%20arg%7C1%23%3A%200%23.Pattern%3A%20DeclarationPatternOperation%3A%20TypeC%20c%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block7%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%237%7C%23%23%20BranchValue%20%23%23%7C0%23%3A%20InvocationOperation%3A%20ToString%3A%20c.ToString()%7C1%23%3A%200%23.Instance%3A%20LocalReferenceOperation%3A%20c%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block8%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%238%7C%23%23%20BranchValue%20%23%23%7C0%23%3A%20ConversionOperation%3A%20null%7C1%23%3A%200%23.Operand%3A%20LiteralOperation%3A%20null%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C0%23%3A%20FlowCaptureOperation%3A%20%23Capture-0%3A%20arg%7C1%23%3A%200%23.Value%3A%20ParameterReferenceOperation%3A%20arg%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block9%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%239%7D%22%5D%0D%0Acfg0_block1%20-%3E%20cfg0_block2%0D%0Acfg0_block2%20-%3E%20cfg0_block3%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block2%20-%3E%20cfg0_block4%20%5Blabel%3D%22WhenFalse%22%5D%0D%0Acfg0_block4%20-%3E%20cfg0_block5%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block4%20-%3E%20cfg0_block6%20%5Blabel%3D%22WhenFalse%22%5D%0D%0Acfg0_block6%20-%3E%20cfg0_block7%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block6%20-%3E%20cfg0_block8%20%5Blabel%3D%22WhenFalse%22%5D%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block3%20-%3E%20cfg0_block9%20%5Blabel%3D%22Return%22%5D%0D%0Acfg0_block5%20-%3E%20cfg0_block9%20%5Blabel%3D%22Return%22%5D%0D%0Acfg0_block7%20-%3E%20cfg0_block9%20%5Blabel%3D%22Return%22%5D%0D%0Acfg0_block8%20-%3E%20cfg0_block9%20%5Blabel%3D%22Return%22%5D%0D%0A%7D%0D%0A

/*
public string SwitchStatementIs(object arg)
    {
        switch (arg)
        {
            case TypeA a:
                return a.ToString();
            case TypeB b:
                return b.ToString();
            case TypeC c:
                return c.ToString();
            default:
                return null;
        }
    }
*/

digraph "SwitchStatementIs" {
subgraph "cluster_1" {
label = "LocalLifetime region, Captures: #Capture-0"
subgraph "cluster_2" {
label = "LocalLifetime region, Locals: a, b, c"
cfg0_block2 [shape=record label="{BLOCK #2|## BranchValue ##|0#: IsPatternOperation: TypeA a|1#: 0#.Value: FlowCaptureReferenceOperation: #Capture-0: arg|1#: 0#.Pattern: DeclarationPatternOperation: TypeA a|##########}"]
cfg0_block3 [shape=record label="{BLOCK #3|## BranchValue ##|0#: InvocationOperation: ToString: a.ToString()|1#: 0#.Instance: LocalReferenceOperation: a|##########}"]
cfg0_block4 [shape=record label="{BLOCK #4|## BranchValue ##|0#: IsPatternOperation: TypeB b|1#: 0#.Value: FlowCaptureReferenceOperation: #Capture-0: arg|1#: 0#.Pattern: DeclarationPatternOperation: TypeB b|##########}"]
cfg0_block5 [shape=record label="{BLOCK #5|## BranchValue ##|0#: InvocationOperation: ToString: b.ToString()|1#: 0#.Instance: LocalReferenceOperation: b|##########}"]
cfg0_block6 [shape=record label="{BLOCK #6|## BranchValue ##|0#: IsPatternOperation: TypeC c|1#: 0#.Value: FlowCaptureReferenceOperation: #Capture-0: arg|1#: 0#.Pattern: DeclarationPatternOperation: TypeC c|##########}"]
cfg0_block7 [shape=record label="{BLOCK #7|## BranchValue ##|0#: InvocationOperation: ToString: c.ToString()|1#: 0#.Instance: LocalReferenceOperation: c|##########}"]
cfg0_block8 [shape=record label="{BLOCK #8|## BranchValue ##|0#: ConversionOperation: null|1#: 0#.Operand: LiteralOperation: null|##########}"]
}
cfg0_block1 [shape=record label="{BLOCK #1|0#: FlowCaptureOperation: #Capture-0: arg|1#: 0#.Value: ParameterReferenceOperation: arg|##########}"]
}
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block9 [shape=record label="{EXIT #9}"]
cfg0_block1 -> cfg0_block2
cfg0_block2 -> cfg0_block3 [label="Else"]
cfg0_block2 -> cfg0_block4 [label="WhenFalse"]
cfg0_block4 -> cfg0_block5 [label="Else"]
cfg0_block4 -> cfg0_block6 [label="WhenFalse"]
cfg0_block6 -> cfg0_block7 [label="Else"]
cfg0_block6 -> cfg0_block8 [label="WhenFalse"]
cfg0_block0 -> cfg0_block1
cfg0_block3 -> cfg0_block9 [label="Return"]
cfg0_block5 -> cfg0_block9 [label="Return"]
cfg0_block7 -> cfg0_block9 [label="Return"]
cfg0_block8 -> cfg0_block9 [label="Return"]
}
