// http://viz-js.com/
// https://edotor.net/?engine=dot#digraph%20%22IsType%22%20%7B%0D%0Asubgraph%20%22cluster_1%22%20%7B%0Alabel%20%3D%20%22LocalLifetime%20region%2C%20Locals%3A%20ret%2C%20str%2C%20Captures%3A%20%23Capture-0%22%0D%0Acfg0_block1%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%231%7C%23%23%20BranchValue%20%23%23%7C0%23%3A%20IsPatternOperation%3A%20a%20is%20string%20str%7C1%23%3A%200%23.Value%3A%20ParameterReferenceOperation%3A%20a%7C1%23%3A%200%23.Pattern%3A%20DeclarationPatternOperation%3A%20string%20str%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block2%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%232%7C0%23%3A%20FlowCaptureOperation%3A%20%23Capture-0%3A%20str.Length%20%5C%3E%200%7C1%23%3A%200%23.Value%3A%20BinaryOperation%3A%20str.Length%20%5C%3E%200%7C2%23%3A%201%23.LeftOperand%3A%20PropertyReferenceOperation%3A%20str.Length%7C3%23%3A%202%23.Instance%3A%20LocalReferenceOperation%3A%20str%7C2%23%3A%201%23.RightOperand%3A%20LiteralOperation%3A%200%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block3%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%233%7C0%23%3A%20FlowCaptureOperation%3A%20%23Capture-0%3A%20a%20is%20string%20str%7C1%23%3A%200%23.Value%3A%20LiteralOperation%3A%20a%20is%20string%20str%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0Acfg0_block4%20%5Bshape%3Drecord%20label%3D%22%7BBLOCK%20%234%7C0%23%3A%20SimpleAssignmentOperation%3A%20ret%20%3D%20a%20is%20string%20str%20%26%26%20str.Length%20%5C%3E%200%7C1%23%3A%200%23.Target%3A%20LocalReferenceOperation%3A%20ret%20%3D%20a%20is%20string%20str%20%26%26%20str.Length%20%5C%3E%200%7C1%23%3A%200%23.Value%3A%20FlowCaptureReferenceOperation%3A%20%23Capture-0%3A%20a%20is%20string%20str%20%26%26%20str.Length%20%5C%3E%200%7C%23%23%23%23%23%23%23%23%23%23%7D%22%5D%0D%0A%7D%0D%0Acfg0_block0%20%5Bshape%3Drecord%20label%3D%22%7BENTRY%20%230%7D%22%5D%0D%0Acfg0_block5%20%5Bshape%3Drecord%20label%3D%22%7BEXIT%20%235%7D%22%5D%0D%0Acfg0_block0%20-%3E%20cfg0_block1%0D%0Acfg0_block1%20-%3E%20cfg0_block2%20%5Blabel%3D%22Else%22%5D%0D%0Acfg0_block1%20-%3E%20cfg0_block3%20%5Blabel%3D%22WhenFalse%22%5D%0D%0Acfg0_block2%20-%3E%20cfg0_block4%0D%0Acfg0_block3%20-%3E%20cfg0_block4%0D%0Acfg0_block4%20-%3E%20cfg0_block5%0D%0A%7D%0D%0A

/*
public void IsType(object a)
    {
        var ret = a is string str && str.Length > 0;
    }
*/

digraph "IsType" {
subgraph "cluster_1" {
label = "LocalLifetime region, Locals: ret, str, Captures: #Capture-0"
cfg0_block1 [shape=record label="{BLOCK #1|## BranchValue ##|0#: IsPatternOperation: a is string str|1#: 0#.Value: ParameterReferenceOperation: a|1#: 0#.Pattern: DeclarationPatternOperation: string str|##########}"]
cfg0_block2 [shape=record label="{BLOCK #2|0#: FlowCaptureOperation: #Capture-0: str.Length \> 0|1#: 0#.Value: BinaryOperation: str.Length \> 0|2#: 1#.LeftOperand: PropertyReferenceOperation: str.Length|3#: 2#.Instance: LocalReferenceOperation: str|2#: 1#.RightOperand: LiteralOperation: 0|##########}"]
cfg0_block3 [shape=record label="{BLOCK #3|0#: FlowCaptureOperation: #Capture-0: a is string str|1#: 0#.Value: LiteralOperation: a is string str|##########}"]
cfg0_block4 [shape=record label="{BLOCK #4|0#: SimpleAssignmentOperation: ret = a is string str && str.Length \> 0|1#: 0#.Target: LocalReferenceOperation: ret = a is string str && str.Length \> 0|1#: 0#.Value: FlowCaptureReferenceOperation: #Capture-0: a is string str && str.Length \> 0|##########}"]
}
cfg0_block0 [shape=record label="{ENTRY #0}"]
cfg0_block5 [shape=record label="{EXIT #5}"]
cfg0_block0 -> cfg0_block1
cfg0_block1 -> cfg0_block2 [label="Else"]
cfg0_block1 -> cfg0_block3 [label="WhenFalse"]
cfg0_block2 -> cfg0_block4
cfg0_block3 -> cfg0_block4
cfg0_block4 -> cfg0_block5
}
